{"key":"content:zh:3.api:1.composables:use-state.md","generatedAt":"2022-07-24T04:29:06.128Z","mtime":"2022-07-24T04:29:06.124Z","slug":"use-state","title":"useState","position":"000300019999","to":"/api/composables/use-state","draft":false,"page":true,"language":"zh","empty":false,"description":"","body":{"raw":"# `useState`\n\n```ts\nuseState<T>(init?: () => T | Ref<T>): Ref<T>\nuseState<T>(key: string, init?: () => T | Ref<T>): Ref<T>\n```\n\n* **key**: A unique key ensuring that data fetching is properly de-duplicated across requests. If you do not provide a key, then a key that is unique to the file and line number of the instance of `useState` will be generated for you.\n* **init**: A function that provides initial value for the state when not initiated. This function can also return a `Ref`.\n* **T**: (typescript only) Specify the type of state\n\n::ReadMore{link=\"/guide/features/state-management\"}\n::\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"usestate"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"useState"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["token","generic-function"]},"children":[{"type":"element","tag":"span","props":{"className":["token","function"]},"children":[{"type":"text","value":"useState"}]},{"type":"element","tag":"span","props":{"className":["token","generic","class-name"]},"children":[{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]}]}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"init"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" Ref"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Ref"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","generic-function"]},"children":[{"type":"element","tag":"span","props":{"className":["token","function"]},"children":[{"type":"text","value":"useState"}]},{"type":"element","tag":"span","props":{"className":["token","generic","class-name"]},"children":[{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]}]}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"key"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","builtin"]},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" init"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" Ref"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Ref"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"className":["token","constant"]},"children":[{"type":"text","value":"T"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"key"}]},{"type":"text","value":": A unique key ensuring that data fetching is properly de-duplicated across requests. If you do not provide a key, then a key that is unique to the file and line number of the instance of "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"useState"}]},{"type":"text","value":" will be generated for you."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"init"}]},{"type":"text","value":": A function that provides initial value for the state when not initiated. This function can also return a "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Ref"}]},{"type":"text","value":"."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"T"}]},{"type":"text","value":": (typescript only) Specify the type of state"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"read-more","props":{"link":"/guide/features/state-management"},"children":[]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}}}