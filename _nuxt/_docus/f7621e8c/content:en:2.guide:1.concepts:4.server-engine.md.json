{"key":"content:en:2.guide:1.concepts:4.server-engine.md","generatedAt":"2022-07-12T11:59:48.695Z","mtime":"2022-07-12T11:59:48.682Z","slug":"server-engine","title":"Server Engine","position":"000200010004","to":"/guide/concepts/server-engine","draft":false,"page":true,"language":"en","empty":false,"description":"Nuxt 3 is powered by a new server engine, code-named \"Nitro\".","body":{"raw":"# Server Engine\n\nNuxt 3 is powered by a new server engine, code-named \"Nitro\".\n\nThis engine has many benefits:\n::list\n\n- Cross-platform support for Node.js, Browsers, service-workers and more.\n- Serverless support out-of-the-box.\n- API routes support.\n- Automatic code-splitting and async-loaded chunks.\n- Hybrid mode for static + serverless sites.\n- Development server with hot module reloading.\n::\n\n## API Layer\n\nServer [API endpoints](/guide/directory-structure/server#api-routes) and [Middleware](/guide/directory-structure/server#server-middleware) are added by Nitro that internally uses [h3](https://github.com/unjs/h3).\n\nKey features include:\n\n- Handlers can directly return objects/arrays for an automatically-handled JSON response\n- Handlers can return promises, which will be awaited (`res.end()` and `next()` are also supported)\n- Helper functions for body parsing, cookie handling, redirects, headers and more\n\nCheck out [the h3 docs](https://github.com/unjs/h3) for more information.\n\n::alert{type=\"info\" icon=ℹ️}\nLearn more about the API layer in the [`server/`](/guide/directory-structure/server) directory.\n::\n\n## Direct API calls\n\nNitro allows 'direct' calling of routes via the globally-available `$fetch` helper. This will make an API call to the server if run on the browser, but will directly call the relevant function if run on the server, **saving an additional API call**.\n\n`$fetch` API is using [ohmyfetch](https://github.com/unjs/ohmyfetch), with key features including:\n\n- Automatic parsing of JSON responses (with access to raw response if needed)\n- Request body and params are automatically handled, with correct `Content-Type` headers\n\nFor more information on `$fetch` features, check out [ohmyfetch](https://github.com/unjs/ohmyfetch).\n\n## Typed API routes\n\nWhen using API routes (or middleware), Nitro will generate typings for these routes as long as you are returning a value instead of using `res.end()` to send a response.\n\nYou can access these types when using `$fetch()` or `useFetch()`.\n\n## Standalone Server\n\nNitro produces a standalone server dist that is independent of `node_modules`.\n\nThe server in Nuxt 2 is not standalone and requires part of Nuxt core to be involved by running `nuxt start` (with the [`nuxt-start`](https://www.npmjs.com/package/nuxt-start) or [`nuxt`](https://www.npmjs.com/package/nuxt) distributions) or custom programmatic usage, which is fragile and prone to breakage and not suitable for serverless and service-worker environments.\n\nNuxt 3 generates this dist when running `nuxt build` into a [`.output`](/guide/directory-structure/output) directory.\n\nThe output contains runtime code to run your Nuxt server in any environment (including experimental browser service workers!) and serve your static files, making it a true hybrid framework for the JAMstack. In addition, Nuxt implements a native storage layer, supporting multi-source drivers and local assets.\n\n::alert{type=\"info\" icon=IconCode}\nCheck out the Nitro engine on GitHub: [unjs/nitro](https://github.com/unjs/nitro).\n::\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"server-engine"},"children":[{"type":"text","value":"Server Engine"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"text","value":"Nuxt 3 is powered by a new server engine, code-named \"Nitro\"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"This engine has many benefits:"}]},{"type":"text","value":"\n"},{"type":"element","tag":"list","props":{},"children":[{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Cross-platform support for Node.js, Browsers, service-workers and more."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Serverless support out-of-the-box."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"API routes support."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Automatic code-splitting and async-loaded chunks."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Hybrid mode for static + serverless sites."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Development server with hot module reloading."},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"api-layer"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#api-layer"},"children":[{"type":"text","value":"API Layer"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Server "},{"type":"element","tag":"prose-a","props":{"href":"/guide/directory-structure/server#api-routes"},"children":[{"type":"text","value":"API endpoints"}]},{"type":"text","value":" and "},{"type":"element","tag":"prose-a","props":{"href":"/guide/directory-structure/server#server-middleware"},"children":[{"type":"text","value":"Middleware"}]},{"type":"text","value":" are added by Nitro that internally uses "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/unjs/h3","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"h3"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Key features include:"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Handlers can directly return objects/arrays for an automatically-handled JSON response"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Handlers can return promises, which will be awaited ("},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"res.end()"}]},{"type":"text","value":" and "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"next()"}]},{"type":"text","value":" are also supported)"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Helper functions for body parsing, cookie handling, redirects, headers and more"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Check out "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/unjs/h3","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"the h3 docs"}]},{"type":"text","value":" for more information."}]},{"type":"text","value":"\n"},{"type":"element","tag":"alert","props":{"icon":"ℹ️","type":"info"},"children":[{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Learn more about the API layer in the "},{"type":"element","tag":"prose-a","props":{"href":"/guide/directory-structure/server"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"server/"}]}]},{"type":"text","value":" directory."}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"direct-api-calls"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#direct-api-calls"},"children":[{"type":"text","value":"Direct API calls"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Nitro allows 'direct' calling of routes via the globally-available "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" helper. This will make an API call to the server if run on the browser, but will directly call the relevant function if run on the server, "},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"saving an additional API call"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" API is using "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/unjs/ohmyfetch","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"ohmyfetch"}]},{"type":"text","value":", with key features including:"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Automatic parsing of JSON responses (with access to raw response if needed)"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Request body and params are automatically handled, with correct "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Content-Type"}]},{"type":"text","value":" headers"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"For more information on "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" features, check out "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/unjs/ohmyfetch","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"ohmyfetch"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"typed-api-routes"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#typed-api-routes"},"children":[{"type":"text","value":"Typed API routes"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"When using API routes (or middleware), Nitro will generate typings for these routes as long as you are returning a value instead of using "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"res.end()"}]},{"type":"text","value":" to send a response."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"You can access these types when using "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"$fetch()"}]},{"type":"text","value":" or "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"useFetch()"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"standalone-server"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#standalone-server"},"children":[{"type":"text","value":"Standalone Server"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Nitro produces a standalone server dist that is independent of "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"node_modules"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"The server in Nuxt 2 is not standalone and requires part of Nuxt core to be involved by running "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"nuxt start"}]},{"type":"text","value":" (with the "},{"type":"element","tag":"prose-a","props":{"href":"https://www.npmjs.com/package/nuxt-start","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"nuxt-start"}]}]},{"type":"text","value":" or "},{"type":"element","tag":"prose-a","props":{"href":"https://www.npmjs.com/package/nuxt","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"nuxt"}]}]},{"type":"text","value":" distributions) or custom programmatic usage, which is fragile and prone to breakage and not suitable for serverless and service-worker environments."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Nuxt 3 generates this dist when running "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"nuxt build"}]},{"type":"text","value":" into a "},{"type":"element","tag":"prose-a","props":{"href":"/guide/directory-structure/output"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":".output"}]}]},{"type":"text","value":" directory."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"The output contains runtime code to run your Nuxt server in any environment (including experimental browser service workers!) and serve your static files, making it a true hybrid framework for the JAMstack. In addition, Nuxt implements a native storage layer, supporting multi-source drivers and local assets."}]},{"type":"text","value":"\n"},{"type":"element","tag":"alert","props":{"icon":"IconCode","type":"info"},"children":[{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Check out the Nitro engine on GitHub: "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/unjs/nitro","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"unjs/nitro"}]},{"type":"text","value":"."}]}]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"api-layer","depth":2,"text":"API Layer"},{"id":"direct-api-calls","depth":2,"text":"Direct API calls"},{"id":"typed-api-routes","depth":2,"text":"Typed API routes"},{"id":"standalone-server","depth":2,"text":"Standalone Server"}]}}}