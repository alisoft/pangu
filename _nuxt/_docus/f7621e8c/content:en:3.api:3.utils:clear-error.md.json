{"key":"content:en:3.api:3.utils:clear-error.md","generatedAt":"2022-07-12T12:13:01.084Z","mtime":"2022-07-12T12:13:01.078Z","slug":"clear-error","title":"clearError","position":"000300039999","to":"/api/utils/clear-error","draft":false,"page":true,"language":"en","empty":false,"description":"Nuxt provides a composable to clear all handled errors.","body":{"raw":"# `clearError`\n\nNuxt provides a composable to clear all handled errors.\n\nWithin your pages, components, and plugins, you can use `clearError` to clear all errors and redirect the user.\n\n**Parameters:**\n\n- `options?: { redirect?: string }`\n\nYou can provide an optional path to redirect to (for example, if you want to navigate to a 'safe' page).\n\n```js\n// Without redirect\nclearError()\n\n// With redirect\nclearError({ redirect: '/homepage' })\n```\n\nErrors are set in state using [`useError()`](/api/composables/use-error). The `clearError` composable will reset this state and calls the `app:error:cleared` hook with the provided options.\n\n::ReadMore{link=\"/guide/features/error-handling\"}\n::\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"clearerror"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"clearError"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"text","value":"Nuxt provides a composable to clear all handled errors."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Within your pages, components, and plugins, you can use "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"clearError"}]},{"type":"text","value":" to clear all errors and redirect the user."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"Parameters:"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"options?: { redirect?: string }"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"You can provide an optional path to redirect to (for example, if you want to navigate to a 'safe' page)."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"pre","props":{"className":["language-js","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["token","comment"]},"children":[{"type":"text","value":"// Without redirect"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","function"]},"children":[{"type":"text","value":"clearError"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tag":"span","props":{"className":["token","comment"]},"children":[{"type":"text","value":"// With redirect"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","function"]},"children":[{"type":"text","value":"clearError"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" redirect"},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","string"]},"children":[{"type":"text","value":"'/homepage'"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Errors are set in state using "},{"type":"element","tag":"prose-a","props":{"href":"/api/composables/use-error"},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"useError()"}]}]},{"type":"text","value":". The "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"clearError"}]},{"type":"text","value":" composable will reset this state and calls the "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"app:error:cleared"}]},{"type":"text","value":" hook with the provided options."}]},{"type":"text","value":"\n"},{"type":"element","tag":"read-more","props":{"link":"/guide/features/error-handling"},"children":[]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}}}