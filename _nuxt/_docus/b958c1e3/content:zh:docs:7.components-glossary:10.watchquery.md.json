{"key":"content:zh:docs:7.components-glossary:10.watchquery.md","generatedAt":"2022-04-23T10:19:22.536Z","mtime":"2022-04-23T10:19:22.532Z","slug":"watchquery","title":"The watchQuery Property","position":"999900070010","to":"/docs/components-glossary/watchquery","draft":false,"page":true,"language":"zh","description":"Watch query strings and execute component methods on change (asyncData, fetch, validate, layout, ...)","navigation":{"title":"WatchQuery Property"},"category":"components-glossary","empty":false,"body":{"raw":"---\ntitle: 'The watchQuery Property'\ndescription: Watch query strings and execute component methods on change (asyncData, fetch, validate, layout, ...)\nnavigation.title: WatchQuery Property\ncategory: components-glossary\n---\n# The watchQuery property\n\nWatch query strings and execute component methods on change (asyncData, fetch, validate, layout, ...)\n\n---\n\n- **Type:** `Boolean` or `Array` or `Function` (default: `[]`)\n\nUse the `watchQuery` key to set up a watcher for query strings. If the defined strings change, all component methods (asyncData, fetch(context), validate, layout, ...) will be called. Watching is disabled by default to improve performance.\n\nIf you want to set up a watcher for all query strings, set `watchQuery: true`.\n\n```js\nexport default {\n  watchQuery: ['page']\n}\n```\n\nYou can also use the function `watchQuery(newQuery, oldQuery)` to have more refined watchers.\n\n```js\nexport default {\n  watchQuery(newQuery, oldQuery) {\n    // Only execute component methods if the old query string contained `bar`\n    // and the new query string contains `foo`\n    return newQuery.foo && oldQuery.bar\n  }\n}\n```\n\n::alert{type=\"warning\"}\n**Warning**: The new `fetch` hook introduced in 2.12 is not affected by `watchQuery`. For more information see [listening to query string changes](/docs/features/data-fetching#the-fetch-hook).\n::\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"the-watchquery-property"},"children":[{"type":"text","value":"The watchQuery property"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"text","value":"Watch query strings and execute component methods on change (asyncData, fetch, validate, layout, ...)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-hr","props":{"class":"d-heading-hr"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"Type:"}]},{"type":"text","value":" "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Boolean"}]},{"type":"text","value":" or "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":" or "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Function"}]},{"type":"text","value":" (default: "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"[]"}]},{"type":"text","value":")"},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Use the "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"watchQuery"}]},{"type":"text","value":" key to set up a watcher for query strings. If the defined strings change, all component methods (asyncData, fetch(context), validate, layout, ...) will be called. Watching is disabled by default to improve performance."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"If you want to set up a watcher for all query strings, set "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"watchQuery: true"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"pre","props":{"className":["language-js","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"span","props":{"className":["token","literal-property","property"]},"children":[{"type":"text","value":"watchQuery"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tag":"span","props":{"className":["token","string"]},"children":[{"type":"text","value":"'page'"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"You can also use the function "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"watchQuery(newQuery, oldQuery)"}]},{"type":"text","value":" to have more refined watchers."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"pre","props":{"className":["language-js","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"span","props":{"className":["token","function"]},"children":[{"type":"text","value":"watchQuery"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"className":["token","parameter"]},"children":[{"type":"text","value":"newQuery"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" oldQuery"}]},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"span","props":{"className":["token","comment"]},"children":[{"type":"text","value":"// Only execute component methods if the old query string contained `bar`"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"span","props":{"className":["token","comment"]},"children":[{"type":"text","value":"// and the new query string contains `foo`"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"span","props":{"className":["token","keyword","control-flow"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" newQuery"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"className":["token","property-access"]},"children":[{"type":"text","value":"foo"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":"&&"}]},{"type":"text","value":" oldQuery"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"className":["token","property-access"]},"children":[{"type":"text","value":"bar"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"text","value":"Warning"}]},{"type":"text","value":": The new "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"fetch"}]},{"type":"text","value":" hook introduced in 2.12 is not affected by "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"watchQuery"}]},{"type":"text","value":". For more information see "},{"type":"element","tag":"prose-a","props":{"href":"/docs/features/data-fetching#the-fetch-hook"},"children":[{"type":"text","value":"listening to query string changes"}]},{"type":"text","value":"."}]}]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}}}