{"key":"content:en:docs:6.internals-glossary:5.internals-renderer.md","generatedAt":"2022-04-23T04:51:19.700Z","mtime":"2022-04-23T04:51:19.688Z","slug":"internals-renderer","title":"The Renderer class","position":"999900060005","to":"/docs/internals-glossary/internals-renderer","draft":false,"page":true,"language":"en","navigation":{"title":"Renderer"},"description":"This class is exporting a connect middleware which handles and serves all SSR and asset requests.","category":"internals-glossary","empty":false,"body":{"raw":"---\ntitle: The Renderer class\nnavigation.title: Renderer\ndescription: This class is exporting a connect middleware which handles and serves all SSR and asset requests.\ncategory: internals-glossary\n---\n# The renderer class\n\nThis class is exporting a connect middleware which handles and serves all SSR and asset requests.\n\n---\n\n- Source: **[vue-renderer/renderer.js](https://github.com/nuxt/nuxt.js/blob/dev/packages/vue-renderer/src/renderer.js)**\n\n## Hooks\n\nWe can register hooks on certain life cycle events.\n\n| Hook                     | Arguments                | When                                                                                                                                                                                                               |\n| ------------------------ | ------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `render:before`          | (renderer, options)      | Before setting up middleware and resources for the Renderer class, useful to overload some methods or options.                                                                                                     |\n| `render:setupMiddleware` | (app) _connect instance_ | Before Nuxt adds its middleware stack. We can use it to register custom server side middleware.                                                                                                                    |\n| `render:errorMiddleware` | (app) _connect instance_ | Before adding Nuxt error middleware, useful to add your own middleware before using Nuxt's. See the [Sentry module](https://github.com/nuxt-community/sentry-module/blob/v4.0.3/lib/module.js#L151) for more info. |\n| `render:resourcesLoaded` | (resources)              | Called after resources for renderer are loaded (client manifest, server bundle, etc).                                                                                                                              |\n| `render:done`            | (renderer)               | SSR Middleware and all resources are ready (Renderer ready)                                                                                                                                                        |\n| `render:routeContext`    | (context.nuxt)           | _Every time a route is server-rendered and before `render:route` hook_. Called before serializing Nuxt context into `window.__NUXT__`, useful to add some data that you can fetch on client-side.                  |\n| `render:route`           | (url, result, context)   | _Every time a route is server-rendered_. Called before sending back the request to the browser.                                                                                                                    |\n| `render:routeDone`       | (url, result, context)   | _Every time a route is server-rendered_. Called after the response has been sent to the browser.                                                                                                                   |\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"the-renderer-class"},"children":[{"type":"text","value":"The renderer class"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"text","value":"This class is exporting a connect middleware which handles and serves all SSR and asset requests."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-hr","props":{"class":"d-heading-hr"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Source: "},{"type":"element","tag":"prose-strong","props":{},"children":[{"type":"element","tag":"prose-a","props":{"href":"https://github.com/nuxt/nuxt.js/blob/dev/packages/vue-renderer/src/renderer.js","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"vue-renderer/renderer.js"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"hooks"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#hooks"},"children":[{"type":"text","value":"Hooks"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"We can register hooks on certain life cycle events."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-table","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-thead","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-th","props":{},"children":[{"type":"text","value":"Hook"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-th","props":{},"children":[{"type":"text","value":"Arguments"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-th","props":{},"children":[{"type":"text","value":"When"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tbody","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:before"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(renderer, options)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"Before setting up middleware and resources for the Renderer class, useful to overload some methods or options."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:setupMiddleware"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(app) "},{"type":"element","tag":"prose-em","props":{},"children":[{"type":"text","value":"connect instance"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"Before Nuxt adds its middleware stack. We can use it to register custom server side middleware."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:errorMiddleware"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(app) "},{"type":"element","tag":"prose-em","props":{},"children":[{"type":"text","value":"connect instance"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"Before adding Nuxt error middleware, useful to add your own middleware before using Nuxt's. See the "},{"type":"element","tag":"prose-a","props":{"href":"https://github.com/nuxt-community/sentry-module/blob/v4.0.3/lib/module.js#L151","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Sentry module"}]},{"type":"text","value":" for more info."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:resourcesLoaded"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(resources)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"Called after resources for renderer are loaded (client manifest, server bundle, etc)."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:done"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(renderer)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"SSR Middleware and all resources are ready (Renderer ready)"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:routeContext"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(context.nuxt)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-em","props":{},"children":[{"type":"text","value":"Every time a route is server-rendered and before "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:route"}]},{"type":"text","value":" hook"}]},{"type":"text","value":". Called before serializing Nuxt context into "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"window.__NUXT__"}]},{"type":"text","value":", useful to add some data that you can fetch on client-side."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:route"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(url, result, context)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-em","props":{},"children":[{"type":"text","value":"Every time a route is server-rendered"}]},{"type":"text","value":". Called before sending back the request to the browser."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-tr","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"render:routeDone"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"text","value":"(url, result, context)"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-td","props":{},"children":[{"type":"element","tag":"prose-em","props":{},"children":[{"type":"text","value":"Every time a route is server-rendered"}]},{"type":"text","value":". Called after the response has been sent to the browser."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"hooks","depth":2,"text":"Hooks"}]}}}