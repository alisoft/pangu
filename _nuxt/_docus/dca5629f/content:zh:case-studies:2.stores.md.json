{"key":"content:zh:case-studies:2.stores.md","generatedAt":"2022-04-21T11:59:27.075Z","mtime":"2022-04-21T11:59:27.061Z","slug":"stores","title":"Stores.jp","position":"999900020000","to":"/case-studies/stores","draft":false,"page":true,"language":"zh","template":"post","description":"stores.jp is an e-commerce platform which allows users to create their own e-commerce website. It focuses on users who don't have their own e-commerce site yet. That's why most of the features are designed so users can change the style and functionality easily without having any technical background knowledge.","imgUrl":"img/case-studies/stores/cover.png","headingImg":{"hidden":true},"empty":false,"body":{"raw":"---\ntemplate: post\ntitle: Stores.jp\ndescription: \"stores.jp is an e-commerce platform which allows users to create their own e-commerce website. It focuses on users who don't have their own e-commerce site yet. That's why most of the features are designed so users can change the style and functionality easily without having any technical background knowledge.\"\nimgUrl: img/case-studies/stores/cover.png\nheadingImg:\n  hidden: true\n---\n\n![Stores.jp homepage](img/case-studies/stores/main.png){width=736 height=382}\n\n## What is Stores.jp?\n\n[stores.jp](http://stores.jp) is an e-commerce platform which allows users to create their own e-commerce website. It focuses on users who don't have their own e-commerce site yet. That's why most of the features are designed so users can change the style and functionality easily without having any technical background knowledge.\n\nIn the store dashboard the shop owner can change the style, layout or add a banner etc by easily dragging and dropping. Stores.jp has the same features as the well known platform Shopify but it is specially designed for beginners. Most of the features can be enabled or disabled by simply clicking.\n\n## How did you discover Nuxt?\n\nWe considered what is the best stack for us by researching articles and meetup sessions which are written and spoken in Japanese and that is how we found Nuxt. We considered all other choices like React, Angular JS, Angular 2 and Vue.js. For us it is very important to have the documentation in Japanese language as English is difficult especially for beginners.\n\n## Why did you choose Nuxt as your frontend framework?\n\nWhen we started we were just one frontend developer and one designer and sometimes the designer needed to edit HTML so in that case Vue.js single file components are the best. Contrary to React, Nuxt is easy to understand even for designers. At the time Nuxt was the only framework based on Vue.js.\n\nThe old version of [stores.jp](http://stores.jp) was made in Angular JS. As our site grew bigger, our team of developers grew too. We needed to unify our codebase. When we want to add the logic we don't want to discuss if it should be an angular service or a factory so that is why we thought we need a framework instead of a library and that is why we chose Nuxt instead of just using Vue.js.\n\n## Are you using dynamic or static rendering? Why?\n\nThe frontend of the store and then a dashboard with server rendered pages. The storefront is still in Angular JS but we want to migrate to Nuxt in the future. The dashboard was also made with Angular JS but we are currently working on replacing it with Nuxt. At the moment 20% of it is working on Nuxt using client side rending. Server side rendering, dynamic rendering is good for performance. Nuxt has a great option to switch between client side and server side rendering. The Angular JS dashboard was originally setup to work as an SPA so we can't change the architecture of this and we want to focus only on replacing the library which is why currently the dashboard is working with client side rendering.\n\nThen we have the main website which is built with Nuxt using SSR and target static. We choose static site generation because SEO is very important for those kind of pages and they don't have any dynamic content.\n\n## What is your favorite feature?\n\nWe have 3 favorite features. The first is the plugins. This is our favorite feature. The mechanism which injects this into the context, it totally makes sense for Vue.js and is easy to use which is why we like the plugin architecture. The next is page components, generating page routing based on page component directory structure as it is so easy to understand. The last one is the mode, compared to other frameworks I think that Nuxt is an all in one framework. In React we needed to choose a framework based on the architecture, which means if we want to use an SPA we needed to use create-react-app and if we want server side rendering Next.js is better and if we want to use Static Site Generation then Next.js or Gatsby is better. On the other hand if you use Vue.js all you have to do is choose Nuxt as you can switch the architecture later. This is why the mode is my favourite option.\n\n![Stores.jp showcase](img/case-studies/stores/1.png){width=736 height=267}\n\n## Do you have performances benchmarks before & after using Nuxt?\n\nWe haven't had any performance benchmarks yet because of our priority. It has been 8 years since we created [stores.jp](http://stores.jp) and now we are working hard at upgrading it to Nuxt so we don't have any time to look at performance margins. But we are interested in performance so sometimes if our service is slow we will check the lighthouse and try to modify our code. But currently we don't look at any metrics for performance.\n\n## Would you recommend Nuxt?\n\nYes of course we would especially for a startup companies. As I mentioned earlier the fact you can change the strategy later to have client side rendering or server side rendering or static site generation based on the business requirements. That is why Nuxt is good for startups. And also for Japanese companies the fact that the Nuxt documentation is in Japanese is a big advantage. If there is no Japanese documentation it would be an obstacle for them to get started which is the case of Next.js\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"element","tag":"prose-img","props":{"alt":"Stores.jp homepage","height":382,"src":"img/case-studies/stores/main.png","width":736},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"what-is-storesjp"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#what-is-storesjp"},"children":[{"type":"text","value":"What is Stores.jp?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-a","props":{"href":"http://stores.jp","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"stores.jp"}]},{"type":"text","value":" is an e-commerce platform which allows users to create their own e-commerce website. It focuses on users who don't have their own e-commerce site yet. That's why most of the features are designed so users can change the style and functionality easily without having any technical background knowledge."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"In the store dashboard the shop owner can change the style, layout or add a banner etc by easily dragging and dropping. Stores.jp has the same features as the well known platform Shopify but it is specially designed for beginners. Most of the features can be enabled or disabled by simply clicking."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"how-did-you-discover-nuxt"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#how-did-you-discover-nuxt"},"children":[{"type":"text","value":"How did you discover Nuxt?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"We considered what is the best stack for us by researching articles and meetup sessions which are written and spoken in Japanese and that is how we found Nuxt. We considered all other choices like React, Angular JS, Angular 2 and Vue.js. For us it is very important to have the documentation in Japanese language as English is difficult especially for beginners."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"why-did-you-choose-nuxt-as-your-frontend-framework"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#why-did-you-choose-nuxt-as-your-frontend-framework"},"children":[{"type":"text","value":"Why did you choose Nuxt as your frontend framework?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"When we started we were just one frontend developer and one designer and sometimes the designer needed to edit HTML so in that case Vue.js single file components are the best. Contrary to React, Nuxt is easy to understand even for designers. At the time Nuxt was the only framework based on Vue.js."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"The old version of "},{"type":"element","tag":"prose-a","props":{"href":"http://stores.jp","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"stores.jp"}]},{"type":"text","value":" was made in Angular JS. As our site grew bigger, our team of developers grew too. We needed to unify our codebase. When we want to add the logic we don't want to discuss if it should be an angular service or a factory so that is why we thought we need a framework instead of a library and that is why we chose Nuxt instead of just using Vue.js."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"are-you-using-dynamic-or-static-rendering-why"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#are-you-using-dynamic-or-static-rendering-why"},"children":[{"type":"text","value":"Are you using dynamic or static rendering? Why?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"The frontend of the store and then a dashboard with server rendered pages. The storefront is still in Angular JS but we want to migrate to Nuxt in the future. The dashboard was also made with Angular JS but we are currently working on replacing it with Nuxt. At the moment 20% of it is working on Nuxt using client side rending. Server side rendering, dynamic rendering is good for performance. Nuxt has a great option to switch between client side and server side rendering. The Angular JS dashboard was originally setup to work as an SPA so we can't change the architecture of this and we want to focus only on replacing the library which is why currently the dashboard is working with client side rendering."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Then we have the main website which is built with Nuxt using SSR and target static. We choose static site generation because SEO is very important for those kind of pages and they don't have any dynamic content."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"what-is-your-favorite-feature"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#what-is-your-favorite-feature"},"children":[{"type":"text","value":"What is your favorite feature?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"We have 3 favorite features. The first is the plugins. This is our favorite feature. The mechanism which injects this into the context, it totally makes sense for Vue.js and is easy to use which is why we like the plugin architecture. The next is page components, generating page routing based on page component directory structure as it is so easy to understand. The last one is the mode, compared to other frameworks I think that Nuxt is an all in one framework. In React we needed to choose a framework based on the architecture, which means if we want to use an SPA we needed to use create-react-app and if we want server side rendering Next.js is better and if we want to use Static Site Generation then Next.js or Gatsby is better. On the other hand if you use Vue.js all you have to do is choose Nuxt as you can switch the architecture later. This is why the mode is my favourite option."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-img","props":{"alt":"Stores.jp showcase","height":267,"src":"img/case-studies/stores/1.png","width":736},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"do-you-have-performances-benchmarks-before--after-using-nuxt"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#do-you-have-performances-benchmarks-before--after-using-nuxt"},"children":[{"type":"text","value":"Do you have performances benchmarks before & after using Nuxt?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"We haven't had any performance benchmarks yet because of our priority. It has been 8 years since we created "},{"type":"element","tag":"prose-a","props":{"href":"http://stores.jp","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"stores.jp"}]},{"type":"text","value":" and now we are working hard at upgrading it to Nuxt so we don't have any time to look at performance margins. But we are interested in performance so sometimes if our service is slow we will check the lighthouse and try to modify our code. But currently we don't look at any metrics for performance."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"would-you-recommend-nuxt"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#would-you-recommend-nuxt"},"children":[{"type":"text","value":"Would you recommend Nuxt?"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Yes of course we would especially for a startup companies. As I mentioned earlier the fact you can change the strategy later to have client side rendering or server side rendering or static site generation based on the business requirements. That is why Nuxt is good for startups. And also for Japanese companies the fact that the Nuxt documentation is in Japanese is a big advantage. If there is no Japanese documentation it would be an obstacle for them to get started which is the case of Next.js"}]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-is-storesjp","depth":2,"text":"What is Stores.jp?"},{"id":"how-did-you-discover-nuxt","depth":2,"text":"How did you discover Nuxt?"},{"id":"why-did-you-choose-nuxt-as-your-frontend-framework","depth":2,"text":"Why did you choose Nuxt as your frontend framework?"},{"id":"are-you-using-dynamic-or-static-rendering-why","depth":2,"text":"Are you using dynamic or static rendering? Why?"},{"id":"what-is-your-favorite-feature","depth":2,"text":"What is your favorite feature?"},{"id":"do-you-have-performances-benchmarks-before--after-using-nuxt","depth":2,"text":"Do you have performances benchmarks before & after using Nuxt?"},{"id":"would-you-recommend-nuxt","depth":2,"text":"Would you recommend Nuxt?"}]}}}