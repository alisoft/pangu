{"key":"content:zh:docs:5.configuration-glossary:15.configuration-ignore.md","generatedAt":"2022-04-22T12:51:48.531Z","mtime":"2022-04-22T12:51:48.512Z","slug":"configuration-ignore","title":"The ignore Property","position":"999900050015","to":"/docs/configuration-glossary/configuration-ignore","draft":false,"page":true,"language":"zh","navigation":{"title":"ignore"},"description":"Define the ignore files for your Nuxt application","menu":"ignore","category":"configuration-glossary","empty":false,"body":{"raw":"---\ntitle: The ignore Property\nnavigation.title: ignore\ndescription: Define the ignore files for your Nuxt application\nmenu: ignore\ncategory: configuration-glossary\n---\n# The ignore property\n\nDefine the ignore files for your Nuxt application\n\n---\n\n## .nuxtignore\n\nYou can use a `.nuxtignore` file to let Nuxt ignore `layout`, `page`, `store` and `middleware` files in your project’s root directory (`rootDir`) during the build phase. The `.nuxtignore` file is subject to the same specification as `.gitignore` and `.eslintignore` files, in which each line is a glob pattern indicating which files should be ignored.\n\nFor example:\n\n```\n# ignore layout foo.vue\nlayouts/foo.vue\n# ignore layout files whose name ends with -ignore.vue\nlayouts/*-ignore.vue\n\n# ignore page bar.vue\npages/bar.vue\n# ignore page inside ignore folder\npages/ignore/*.vue\n\n# ignore store baz.js\nstore/baz.js\n# ignore store files match *.test.*\nstore/ignore/*.test.*\n\n# ignore middleware files under foo folder except foo/bar.js\nmiddleware/foo/*.js\n!middleware/foo/bar.js\n```\n\n> More details about the spec are in [gitignore doc](https://git-scm.com/docs/gitignore)\n\n## The ignorePrefix Property\n\n- Type: `String`\n- Default: `'-'`\n\n> Any file in pages/, layouts/, middleware/ or store/ will be ignored during building if its filename starts with the prefix specified by `ignorePrefix`.\n\nBy default all files which start with `-` will be ignored, such as `store/-foo.js` and `pages/-bar.vue`. This allows for co-locating tests, utilities, and components with their callers without themselves being converted into routes, stores, etc.\n\n## The ignore Property\n\n- Type: `Array`\n- Default: `['**/*.test.*']`\n\n> More customizable than `ignorePrefix`: all files matching glob patterns specified inside `ignore` will be ignored in building.\n\n## ignoreOptions\n\n`nuxtignore` is using `node-ignore` under the hood, `ignoreOptions` can be configured as `options` of `node-ignore`.\n\n```js{}[nuxt.config.js]\nexport default {\n  ignoreOptions: {\n    ignorecase: false\n  }\n}\n```\n","ast":{"type":"root","children":[{"type":"element","tag":"prose-h1","props":{"class":"d-heading-title","id":"the-ignore-property"},"children":[{"type":"text","value":"The ignore property"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{"class":"d-heading-description"},"children":[{"type":"text","value":"Define the ignore files for your Nuxt application"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-hr","props":{"class":"d-heading-hr"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"nuxtignore"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#nuxtignore"},"children":[{"type":"text","value":".nuxtignore"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"You can use a "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":".nuxtignore"}]},{"type":"text","value":" file to let Nuxt ignore "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"layout"}]},{"type":"text","value":", "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"page"}]},{"type":"text","value":", "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"store"}]},{"type":"text","value":" and "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"middleware"}]},{"type":"text","value":" files in your project’s root directory ("},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"rootDir"}]},{"type":"text","value":") during the build phase. The "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":".nuxtignore"}]},{"type":"text","value":" file is subject to the same specification as "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":".gitignore"}]},{"type":"text","value":" and "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":".eslintignore"}]},{"type":"text","value":" files, in which each line is a glob pattern indicating which files should be ignored."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"pre","props":{"className":["line-numbers","language-text"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"# ignore layout foo.vue\nlayouts/foo.vue\n# ignore layout files whose name ends with -ignore.vue\nlayouts/*-ignore.vue\n\n# ignore page bar.vue\npages/bar.vue\n# ignore page inside ignore folder\npages/ignore/*.vue\n\n# ignore store baz.js\nstore/baz.js\n# ignore store files match *.test.*\nstore/ignore/*.test.*\n\n# ignore middleware files under foo folder except foo/bar.js\nmiddleware/foo/*.js\n!middleware/foo/bar.js\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-blockquote","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"More details about the spec are in "},{"type":"element","tag":"prose-a","props":{"href":"https://git-scm.com/docs/gitignore","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"gitignore doc"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"the-ignoreprefix-property"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#the-ignoreprefix-property"},"children":[{"type":"text","value":"The ignorePrefix Property"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Type: "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"String"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Default: "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"'-'"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-blockquote","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"Any file in pages/, layouts/, middleware/ or store/ will be ignored during building if its filename starts with the prefix specified by "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"ignorePrefix"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"By default all files which start with "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" will be ignored, such as "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"store/-foo.js"}]},{"type":"text","value":" and "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"pages/-bar.vue"}]},{"type":"text","value":". This allows for co-locating tests, utilities, and components with their callers without themselves being converted into routes, stores, etc."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"the-ignore-property-1"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#the-ignore-property-1"},"children":[{"type":"text","value":"The ignore Property"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-ul","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Type: "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"Array"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-li","props":{},"children":[{"type":"text","value":"\n"},{"type":"text","value":"Default: "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"['**/*.test.*']"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-blockquote","props":{},"children":[{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"text","value":"More customizable than "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"ignorePrefix"}]},{"type":"text","value":": all files matching glob patterns specified inside "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"ignore"}]},{"type":"text","value":" will be ignored in building."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-h2","props":{"id":"ignoreoptions"},"children":[{"type":"element","tag":"prose-a","props":{"href":"#ignoreoptions"},"children":[{"type":"text","value":"ignoreOptions"}]}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-paragraph","props":{},"children":[{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"nuxtignore"}]},{"type":"text","value":" is using "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"node-ignore"}]},{"type":"text","value":" under the hood, "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"ignoreOptions"}]},{"type":"text","value":" can be configured as "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"options"}]},{"type":"text","value":" of "},{"type":"element","tag":"prose-code-inline","props":{},"children":[{"type":"text","value":"node-ignore"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"prose-code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"nuxt.config.js"}]},{"type":"element","tag":"pre","props":{"className":["line-numbers","language-js"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","keyword","module"]},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"span","props":{"className":["token","literal-property","property"]},"children":[{"type":"text","value":"ignoreOptions"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"span","props":{"className":["token","literal-property","property"]},"children":[{"type":"text","value":"ignorecase"}]},{"type":"element","tag":"span","props":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tag":"span","props":{"className":["token","boolean"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tag":"span","props":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"}]}]}]}]},"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"nuxtignore","depth":2,"text":".nuxtignore"},{"id":"the-ignoreprefix-property","depth":2,"text":"The ignorePrefix Property"},{"id":"the-ignore-property-1","depth":2,"text":"The ignore Property"},{"id":"ignoreoptions","depth":2,"text":"ignoreOptions"}]}}}